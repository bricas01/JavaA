/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package group2;

import com.toedter.calendar.JDateChooser;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Admin
 */
public class item extends javax.swing.JFrame {
    
    private ImageIcon format = null;
    String fname = null;
    int s = 0;
    byte[] pimage = null;
    Connection con = null;

    /**
     * Creates new form item
     */
    
    public item() {
        initComponents();
        con = DBConnect.connect();
        fetch();
       // txtid.setVisible(false);
       txtuser.setEnabled(false);
    }
    
    public void fetch(){
        //txtid.setEnabled(false);
        try {
            
            PreparedStatement ps = con.prepareStatement("select * from itemngmnt order by item asc");

            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String id = String.valueOf(rs.getInt("id"));
                String item = rs.getString("item");
                String category = rs.getString("category");
                String description = rs.getString("description");
                String quantity = String.valueOf(rs.getInt("quantity"));
                String price = String.valueOf(rs.getInt("price"));
                String deliverydate = rs.getString("deliverydate");
                String expirydate = rs.getString("expirydate");
                String tuser = rs.getString("user");
                byte [] img = rs.getBytes("image");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myimg = im.getScaledInstance(lblImage.getWidth(),
                        lblImage.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myimg);
                String user = rs.getString("user");
                
                txtid.setText(""+id);
                txtitem2.setText(item);
                txtcategory2.setText(category);
                txtdescription2.setText(description);
                txtquantity2.setText(quantity);
                txtprice2.setText(price);
                SimpleDateFormat sd = new SimpleDateFormat("YYYY-MM-dd");
                java.util.Date d = sd.parse(deliverydate);
                txtdeliverydate2.setDate(d);
                java.util.Date d2 = sd.parse(expirydate);
                txtexpirydate2.setDate(d2);
                
                //txtdeliverydate2.setText(deliverydate);
                //txtexpirydate2.setText(expirydate);
                txtuser.setText(tuser);
                lblImage.setIcon(newImage);
                
               
               
                
                
                DefaultTableModel table = (DefaultTableModel)tbl1.getModel();
                table.addRow(new Object[] {id,item,category,description,quantity,price,deliverydate,expirydate,user});

            
            }

        } catch (Exception ex) {
            Logger.getLogger(Final.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }

    
    public ImageIcon resizeImage(String imagePath,byte[] pic){
        
        ImageIcon myImage = null;
        if(imagePath != null){
        
            myImage = new ImageIcon(imagePath);
        
        }else{
        
            myImage = new ImageIcon(pic);
        }
        
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(lblImage.getHeight(),lblImage.getWidth(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDatePickerUtil1 = new net.sourceforge.jdatepicker.util.JDatePickerUtil();
        jPanel1 = new javax.swing.JPanel();
        txtitem = new javax.swing.JTextField();
        txtcategory = new javax.swing.JTextField();
        txtdescription = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        cmdaddimage = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl1 = new javax.swing.JTable();
        txtsearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtitem2 = new javax.swing.JTextField();
        txtcategory2 = new javax.swing.JTextField();
        txtdescription2 = new javax.swing.JTextField();
        txtquantity2 = new javax.swing.JTextField();
        txtprice2 = new javax.swing.JTextField();
        txtuser = new javax.swing.JTextField();
        cmdadd = new javax.swing.JButton();
        cmdsave = new javax.swing.JButton();
        cmddelete = new javax.swing.JButton();
        cmdclose = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        txtdeliverydate = new com.toedter.calendar.JDateChooser();
        txtexpirydate = new com.toedter.calendar.JDateChooser();
        txtuser2 = new javax.swing.JTextField();
        txtdeliverydate2 = new com.toedter.calendar.JDateChooser();
        txtexpirydate2 = new com.toedter.calendar.JDateChooser();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ITEM CATEGORY MANAGEMENT");

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setForeground(new java.awt.Color(0, 153, 153));

        jLabel2.setText("Item");

        jLabel3.setText("Category");

        jLabel4.setText("Description");

        jLabel5.setText("Quantity");

        jLabel6.setText("Price");

        jLabel7.setText("Delivery Date");

        jLabel8.setText("Expiry Date");

        lblImage.setBackground(new java.awt.Color(204, 204, 255));
        lblImage.setOpaque(true);

        cmdaddimage.setBackground(new java.awt.Color(0, 153, 153));
        cmdaddimage.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdaddimage.setForeground(new java.awt.Color(255, 255, 255));
        cmdaddimage.setText("Add Image");
        cmdaddimage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdaddimageActionPerformed(evt);
            }
        });

        tbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Item", "Category", "Description", "Quantity", "Price", "Deliverydate", "Expirydate", "User"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl1);

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel10.setText("Search");

        cmdadd.setBackground(new java.awt.Color(0, 153, 153));
        cmdadd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdadd.setForeground(new java.awt.Color(255, 255, 255));
        cmdadd.setText("ADD");
        cmdadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdaddActionPerformed(evt);
            }
        });

        cmdsave.setBackground(new java.awt.Color(0, 153, 153));
        cmdsave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdsave.setForeground(new java.awt.Color(255, 255, 255));
        cmdsave.setText("UPDATE");
        cmdsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdsaveActionPerformed(evt);
            }
        });

        cmddelete.setBackground(new java.awt.Color(0, 153, 153));
        cmddelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmddelete.setForeground(new java.awt.Color(255, 255, 255));
        cmddelete.setText("DELETE");
        cmddelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmddeleteActionPerformed(evt);
            }
        });

        cmdclose.setBackground(new java.awt.Color(0, 153, 153));
        cmdclose.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cmdclose.setForeground(new java.awt.Color(102, 0, 0));
        cmdclose.setText("CLOSE");
        cmdclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdcloseActionPerformed(evt);
            }
        });

        txtdeliverydate.setDateFormatString("YYYY-MM-dd"); // NOI18N
        txtdeliverydate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtdeliverydateFocusLost(evt);
            }
        });

        txtexpirydate.setDateFormatString("YYYY-MM-dd"); // NOI18N
        txtexpirydate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtexpirydateFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmdaddimage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtuser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtdeliverydate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtexpirydate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtprice2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtdeliverydate2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addGap(198, 198, 198))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(cmdadd, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmdsave, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmddelete, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addComponent(cmdclose, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(txtitem2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtcategory2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtexpirydate2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtuser, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtdescription2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtquantity2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 54, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(239, 239, 239)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtuser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtitem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtdescription, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(txtdeliverydate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txtexpirydate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtitem2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtcategory2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtdescription2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtquantity2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtprice2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtuser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtdeliverydate2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtexpirydate2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmdadd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdsave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmddelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmdclose, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdaddimage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdaddActionPerformed
      
            int result = JOptionPane.showConfirmDialog(this,"Do you want to add this record?","Confirmation",JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                try {
                                   
                    SimpleDateFormat dFormat = new SimpleDateFormat("YYYY-MM-DD");
                    String date1 = dFormat.format(txtdeliverydate.getDate());
                    String date2 = dFormat.format(txtexpirydate.getDate());
                    
                    String id = txtid.getText();
                    String item = txtitem.getText();
                    String category = txtcategory.getText();
                    String description = txtdescription.getText();
                    String quantity = txtquantity.getText();
                    String price = txtprice.getText();
                    String user = txtuser2.getText();
                    
                    Date date = new Date();
                    java.sql.Date sqldate = new java.sql.Date(date.getTime());
                    java.sql.Date sqldate1 = new java.sql.Date(date.getTime());

                    PreparedStatement ps = con.prepareStatement("insert into itemngmnt"
                            + "(item,category,description,quantity,price,expirydate,deliverydate,image,user,datestamp) "
                            + "values(?,?,?,?,?,?,?,?,?,?)");
                    ps.setString(1,item);
                    ps.setString(2,category);
                    ps.setString(3,description);
                    ps.setString(4,quantity);
                    ps.setString(5,price);
                    ps.setString(6,date1);
                    ps.setString(7,date2);
                    ps.setBytes(8,pimage);
                    ps.setString(9,user);
                    ps.setDate(10,sqldate);

                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Insert Successful");
                    
                    DefaultTableModel table = (DefaultTableModel)tbl1.getModel();
                    table.addRow(new Object[] {id,item,category,description,quantity,price,date1,date2,user});
                    
                } catch (Exception ex) {
                    Logger.getLogger(Final.class.getName()).log(Level.SEVERE, null, ex);
                }   
            }
    }//GEN-LAST:event_cmdaddActionPerformed

    private void cmdcloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdcloseActionPerformed
        Menu MenuFrame = new Menu();
           // FinalFrame.setVisible(true);
        MenuFrame.pack();
        MenuFrame.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_cmdcloseActionPerformed

    private void cmddeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmddeleteActionPerformed
        int result = JOptionPane.showConfirmDialog(this,"Do you want to delete this record?","Confirmation",JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                try {
                                   
                   
                    int id = Integer.parseInt(txtid.getText());
                    SimpleDateFormat dFormat = new SimpleDateFormat("YYYY-MM-DD");
                    String date1 = dFormat.format(txtdeliverydate2.getDate());
                    String date2 = dFormat.format(txtexpirydate2.getDate());
                   
                    String item = txtitem2.getText();
                    String category = txtcategory2.getText();
                    String description = txtdescription2.getText();
                    String quantity = txtquantity2.getText();
                    String price = txtprice2.getText();
                    String user = txtuser.getText();

                    PreparedStatement ps = con.prepareStatement("delete from itemngmnt where id = ?");
                    ps.setInt(1,id);

                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Deleted Successfully");                                
                    
                    
                    
                } catch (Exception ex) {
                    Logger.getLogger(Final.class.getName()).log(Level.SEVERE, null, ex);
                }  
                
               
                 
            }
    }//GEN-LAST:event_cmddeleteActionPerformed

    private void cmdaddimageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdaddimageActionPerformed
       JFileChooser fchooser = new JFileChooser();
        fchooser.showOpenDialog(null);
        File f = fchooser.getSelectedFile();
        fname = f.getAbsolutePath();
        ImageIcon micon = new ImageIcon(fname);
        try{
            
            File image = new File(fname);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for(int readnum; (readnum = fis.read(buf))!= -1;){
            
                baos.write(buf,0,readnum);
            }
            pimage = baos.toByteArray();
            lblImage.setIcon(resizeImage(fname, buf));
            
        }catch (Exception e){
        
        }
    }//GEN-LAST:event_cmdaddimageActionPerformed

    private void txtdeliverydateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtdeliverydateFocusLost
                    
                    
    }//GEN-LAST:event_txtdeliverydateFocusLost

    private void txtexpirydateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtexpirydateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtexpirydateFocusLost

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        DefaultTableModel table = (DefaultTableModel)tbl1.getModel();
        String search = txtsearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        tbl1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtsearchKeyReleased

    private void tbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl1MouseClicked
        int row = tbl1.getSelectedRow();
        String tc = tbl1.getModel().getValueAt(row, 0).toString();
        try {
            
            PreparedStatement ps = con.prepareStatement("select * from itemngmnt where id="+tc+" order by item asc ");

            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){
                String id = String.valueOf(rs.getInt("id"));
                String item = rs.getString("item");
                String category = rs.getString("category");
                String description = rs.getString("description");
                String quantity = String.valueOf(rs.getInt("quantity"));
                String price = String.valueOf(rs.getInt("price"));
                String deliverydate = rs.getString("deliverydate");
                String expirydate = rs.getString("expirydate");
                byte [] img = rs.getBytes("image");
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myimg = im.getScaledInstance(lblImage.getWidth(),
                        lblImage.getHeight(),Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myimg);
                String tuser = rs.getString("user");
                
                txtid.setText(""+id);
                txtitem2.setText(item);
                txtcategory2.setText(category);
                txtdescription2.setText(description);
                txtquantity2.setText(""+quantity);
                txtprice2.setText(""+price);
                
                SimpleDateFormat sd = new SimpleDateFormat("YYYY-MM-dd");
                java.util.Date d = sd.parse(deliverydate);
                txtdeliverydate2.setDate(d);
                java.util.Date d2 = sd.parse(expirydate);
                txtexpirydate2.setDate(d2);
                lblImage.setIcon(newImage);
                txtuser.setText(tuser);
                
             
            
            }

        } catch (Exception ex) {
            Logger.getLogger(Final.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbl1MouseClicked

    private void cmdsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdsaveActionPerformed
        int result = JOptionPane.showConfirmDialog(this,"Do you want to update this record?","Confirmation",JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                try {
                                   
                    SimpleDateFormat dFormat = new SimpleDateFormat("YYYY-MM-DD");
                    String date1 = dFormat.format(txtdeliverydate2.getDate());
                    String date2 = dFormat.format(txtexpirydate2.getDate());
                    
                    int id = Integer.parseInt(txtid.getText());
                    String item = txtitem2.getText();
                    String category = txtcategory2.getText();
                    String description = txtdescription2.getText();
                    int quantity = Integer.parseInt(txtid.getText());
                    double price = Double.parseDouble(txtid.getText());
                    String user = txtuser2.getText();
                    
                    Date date = new Date();
                    java.sql.Date sqldate = new java.sql.Date(date.getTime());

                    PreparedStatement ps = con.prepareStatement("update itemngmnt set item = ?,category = ?,description = ?,quantity = ?,price = ?,expirydate = ?,deliverydate = ?,image = ?,user = ?,datestamp = ? where id = ?");
                    ps.setString(1,item);
                    ps.setString(2,category);
                    ps.setString(3,description);
                    ps.setInt(4,quantity);
                    ps.setDouble(5,price);
                    ps.setString(6,date1);
                    ps.setString(7,date2);
                    ps.setBytes(8,pimage);
                    ps.setString(9,user);
                    ps.setDate(10,sqldate);
                    ps.setInt(11,id);

                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Insert Successful");
                    
                    DefaultTableModel table = (DefaultTableModel)tbl1.getModel();
                    table.addRow(new Object[] {id,item,category,description,quantity,price,date1,date2,user});
                    
                } catch (Exception ex) {
                    Logger.getLogger(Final.class.getName()).log(Level.SEVERE, null, ex);
                }   
            }
    }//GEN-LAST:event_cmdsaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdadd;
    private javax.swing.JButton cmdaddimage;
    private javax.swing.JButton cmdclose;
    private javax.swing.JButton cmddelete;
    private javax.swing.JButton cmdsave;
    private net.sourceforge.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTable tbl1;
    private javax.swing.JTextField txtcategory;
    private javax.swing.JTextField txtcategory2;
    private com.toedter.calendar.JDateChooser txtdeliverydate;
    private com.toedter.calendar.JDateChooser txtdeliverydate2;
    private javax.swing.JTextField txtdescription;
    private javax.swing.JTextField txtdescription2;
    private com.toedter.calendar.JDateChooser txtexpirydate;
    private com.toedter.calendar.JDateChooser txtexpirydate2;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtitem;
    private javax.swing.JTextField txtitem2;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtprice2;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtquantity2;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtuser;
    public javax.swing.JTextField txtuser2;
    // End of variables declaration//GEN-END:variables
}
